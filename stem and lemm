 #STEMMING

import nltk 
nltk.download('averaged_perceptron_tagger')
from nltk.stem import PorterStemmer 
from nltk.stem import SnowballStemmer
from nltk.stem import LancasterStemmer
words=['run','runner','running','ran','runs','easily','caring']

def portstemming(words): 
    ps=PorterStemmer() 
    print("Porter Stemmer")
    for word in words:
          print(word,' >',ps.stem(word))


def snowballstemming(words): 
    snowball=SnowballStemmer(language='english') 
    print("Snowball Stemmer")
    for word in words:
        print(word,' >',snowball.stem(word))

def lancasterstemming(words): 
    lancaster=LancasterStemmer() 
    print("Lancaster Stemmer") 
    for word in words:
        print(word,' >',lancaster.stem(word))


print("Select Operation.") 
print("1.Porter Stemmer") 
print("2.Snowball Stemmer") 
print("3.Lancaster Stemmer")

while True:
    choice=input('Enter Choice(1/2/3):') 
    if  choice in ('1','2','3'):
         if choice == '1':
            print(portstemming(words))
         elif choice == '2': 
            print(snowballstemming(words))
         elif choice == '3':
            print(lancasterstemming(words))

    next_calculation = input("Do you want to do stemming again? (yes/no):") 
    if next_calculation== "no":
        break
    else:  
      print("Invalid Input")




#lemmatization


import nltk
from nltk.stem import WordNetLemmatizer

# Download necessary NLTK data files
nltk.download('wordnet')
nltk.download('omw-1.4')
nltk.download('punkt')

# Initialize the lemmatizer
wordnet_lemmatizer = WordNetLemmatizer()

# Get input from the user
text = input("Enter words for Lemmatizing: ")

# Tokenize the input text
tokenization = nltk.word_tokenize(text)

# Lemmatize each token
for w in tokenization:
    # Lemmatize assuming the word is a verb ('v')
    lemma = wordnet_lemmatizer.lemmatize(w, 'v')
    print(f"Lemma for {w} is {lemma}")

      
